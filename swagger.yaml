openapi: 3.0.0
info:
  version: '0.0.1'
  title: 'Geo Mapping Indonesia'
  description: 'API For Geo Mapping Wilayah Indonesia'
tags:
  - name : Public
    description: public endpoints
  - name : Client
    description: endpoint for clients
  - name : Admin
    description: endpoint for admin
security:
  - application:
      - read
      - write
paths:
  /clientauth:
    get:
      tags:
        - Public
      summary: initial client login using base64 encoded client key and secret
      parameters:
        - $ref: '#/components/parameters/clienttoken'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/jwtResponse'
        '401':
          description: Unauthorized
        '422':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
#CLient Endpoint
  /client/provinsi:
    get:
      tags:
        - Client
      summary: get Province list
      parameters:
        - $ref: '#/components/parameters/authtoken'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/provinsiList'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
  /client/provinsi/[provinsi_id]:
    get:
      tags:
        - Client
      summary: get provinsi detail info by id
      parameters:
        - $ref: '#/components/parameters/authtoken'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/provinsiDetails'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
  /client/provinsi/[provinsi_id]/kota:
    get:
      tags:
        - Client
      summary: get list of city from provinsi id
      parameters:
        - $ref: '#/components/parameters/authtoken'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/kotaList'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
  /client/kota/[kota_id]:
    get:
      tags:
        - Client
      summary: get kota detail info by id
      parameters:
        - $ref: '#/components/parameters/authtoken'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/kotaDetails'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
  /client/provinsi/kota/[kota_id]/kecamatan:
    get:
      tags:
        - Client
      summary: get list of kecamatan from kota id
      parameters:
        - $ref: '#/components/parameters/authtoken'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/kecamatanList'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
  /client/kecamatan/[kecamatan_id]:
    get:
      tags:
        - Client
      summary: get kecamatan detail info by id
      parameters:
        - $ref: '#/components/parameters/authtoken'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/kecamatanDetails'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
  /client/provinsi/kota/kecamatan/[kecamatan_id]/kelurahan:
    get:
      tags:
        - Client
      summary: get list of kelurahan from kecamatan id
      parameters:
        - $ref: '#/components/parameters/authtoken'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/kelurahanList'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
  /client/kelurahan/[kelurahan_id]:
    get:
      tags:
        - Client
      summary: get kelurahan detail info by id
      parameters:
        - $ref: '#/components/parameters/authtoken'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/kelurahanDetails'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
#Admin Endpoint
  /admin/upload:
    post:
      tags:
        - Admin
      summary: Upload CSV file
      parameters:
        - $ref: '#/components/parameters/authtoken'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: csv
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: File Success Uploaded
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
  /admin/provinsi:
    get:
      tags:
        - Admin
      summary: get Province list
      parameters:
        - $ref: '#/components/parameters/authtoken'
        - in: query
          name: rows
          schema:
            type: integer
            example: 2
          description: how many data shown in one page
        - in: query
          name: page
          schema:
            type: string
            example: 1
          description: current open page
        - in: query
          name: orderby
          schema:
            type: string
            example: id
          description: order by
        - in: query
          name: sort
          schema:
            type: string
            example: "asc"
          description: sort ascending or descending
        - in: query
          name: name
          schema:
            type: string
            example: Jakarta
          description: search by name
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/provinsiList'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - Admin
      summary: register new Province
      parameters:
        - $ref: '#/components/parameters/authtoken'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/provinsiRequests'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/provinsiDetails'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
  /admin/provinsi/[provinsi_id]:
    get:
      tags:
        - Admin
      summary: get provinsi detail info by id
      parameters:
        - $ref: '#/components/parameters/authtoken'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/provinsiDetails'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Admin
      summary: edit provinsi info by id
      parameters:
        - $ref: '#/components/parameters/authtoken'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/provinsiRequests'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/provinsiDetails'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Admin
      summary: delete Provinsi by id
      parameters:
        - $ref: '#/components/parameters/authtoken'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/provinsiDetails'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                example: {"message":"Provinsi DKI Jakarta is deleted"}
  /admin/kota:
    get:
      tags:
        - Admin
      summary: get Kota list
      parameters:
        - $ref: '#/components/parameters/authtoken'
        - in: query
          name: rows
          schema:
            type: integer
            example: 2
          description: how many data shown in one page
        - in: query
          name: page
          schema:
            type: string
            example: 1
          description: current open page
        - in: query
          name: orderby
          schema:
            type: string
            example: id
          description: order by
        - in: query
          name: sort
          schema:
            type: string
            example: "asc"
          description: sort ascending or descending
        - in: query
          name: name
          schema:
            type: string
            example: Jakarta
          description: search by name
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/kotaList'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - Admin
      summary: register new Province
      parameters:
        - $ref: '#/components/parameters/authtoken'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kotaRequests'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/kotaDetails'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
  /admin/kota/[kota_id]:
    get:
      tags:
        - Admin
      summary: get kota detail info by id
      parameters:
        - $ref: '#/components/parameters/authtoken'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/kotaDetails'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Admin
      summary: edit kota info by id
      parameters:
        - $ref: '#/components/parameters/authtoken'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kotaRequests'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/kotaDetails'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Admin
      summary: delete kota by id
      parameters:
        - $ref: '#/components/parameters/authtoken'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/kotaDetails'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                example: {"message":"KOTA DKI Jakarta is deleted"}
  /admin/kecamatan:
    get:
      tags:
        - Admin
      summary: get Kecamatan list
      parameters:
        - $ref: '#/components/parameters/authtoken'
        - in: query
          name: rows
          schema:
            type: integer
            example: 2
          description: how many data shown in one page
        - in: query
          name: page
          schema:
            type: string
            example: 1
          description: current open page
        - in: query
          name: orderby
          schema:
            type: string
            example: id
          description: order by
        - in: query
          name: sort
          schema:
            type: string
            example: "asc"
          description: sort ascending or descending
        - in: query
          name: name
          schema:
            type: string
            example: Jakarta
          description: search by name
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/kecamatanList'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - Admin
      summary: register new Province
      parameters:
        - $ref: '#/components/parameters/authtoken'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kecamatanRequests'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/kecamatanDetails'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
  /admin/kecamatan/kecamatan_id]:
    get:
      tags:
        - Admin
      summary: get kecamatan detail info by id
      parameters:
        - $ref: '#/components/parameters/authtoken'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/kecamatanDetails'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Admin
      summary: edit kota info by id
      parameters:
        - $ref: '#/components/parameters/authtoken'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kecamatanRequests'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/kecamatanDetails'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Admin
      summary: delete kota by id
      parameters:
        - $ref: '#/components/parameters/authtoken'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/kecamatanDetails'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                example: {"message":"Kemuning is deleted"}             
  /admin/kelurahan:
    get:
      tags:
        - Admin
      summary: get Kelurahan list
      parameters:
        - $ref: '#/components/parameters/authtoken'
        - in: query
          name: rows
          schema:
            type: integer
            example: 2
          description: how many data shown in one page
        - in: query
          name: page
          schema:
            type: string
            example: 1
          description: current open page
        - in: query
          name: orderby
          schema:
            type: string
            example: id
          description: order by
        - in: query
          name: sort
          schema:
            type: string
            example: "asc"
          description: sort ascending or descending
        - in: query
          name: name
          schema:
            type: string
            example: Jakarta
          description: search by name
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/kecamatanList'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - Admin
      summary: register new Province
      parameters:
        - $ref: '#/components/parameters/authtoken'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kecamatanRequests'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/kecamatanDetails'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
  /admin/kelurahan/kelurahan_id]:
    get:
      tags:
        - Admin
      summary: get kelurahan detail info by id
      parameters:
        - $ref: '#/components/parameters/authtoken'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/kelurahanDetails'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Admin
      summary: edit kota info by id
      parameters:
        - $ref: '#/components/parameters/authtoken'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kelurahanRequests'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/kelurahanDetails'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Admin
      summary: delete kota by id
      parameters:
        - $ref: '#/components/parameters/authtoken'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/kelurahanDetails'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                example: {"message":"Prabumulih Selatan is deleted"}             
  /admin/client_config:
    post:
      tags:
        - Admin
      summary: Create New Client Config
      parameters:
        - $ref: '#/components/parameters/authtoken'
      requestBody:
        content:
          application/json:
            schema:
              type : object
              properties:
                name :
                  type : string
                  example : android_client
                key :
                  type : string
                  example : androkey
                role :
                  type : string
                  example : client
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  name :
                    type : string
                    example : android_client
                  key :
                    type : string
                    example : androkey
                  role :
                    type : string
                    example : client
                  secret:
                    type: string
                    example: 1a50b5da-a3a4-4e49-ba87-4c34195748a9
                  
        '422':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
  
# Added by API Auto Mocking Plugin
servers:
# Added by API Auto Mocking Plugin
# Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/ayannahindonesia/geomapping/0.0.1
  - description: Indonesia Asira dev Geomapping
    url: http://asira.ayannah.com/api-geomapping
  - description: Indonesia Asira staging Geomapping
    url: https://staging-indo.asira.com/v1
components:
  schemas:
    jwtResponse:
      properties:
        expires_in:
          type: number
          example: 1200
        token:
          type: string
          example: eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFuZHJva2V5IiwiaXNfaWfaweiufh2198eu9128jd98wjhdQxNjgsImp0aSI6ImFuZHJva2V5In0.gCPTFIe-GnE9pduQaCfOV8hGo5ttXOalE9Egrsjb9f832hw9eijhdw98jhDVxWa1u6cWfSxMrCReviekgkqflZdA
    ErrorResponse:
      type: object
      properties:
        details:
          type: object
        message:
          type: string
          example: this is your error message
    provinsiRequests:
      required:
        - name
      properties:
        name:
          type: string
          example: DKI Jakarta
    provinsiList:
      type: object
      properties:
        status:
         type: boolean
         example: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/provinsiDetails'
    provinsiDetails:
      required:
        - name
      properties:
        id:
          type: number
          example: 1
        name:
          type: string
          example: DKI Jakarta
    kotaRequests:
      required:
        - name
      properties:
        name:
          type: string
          example: Palembang
    kotaList:
      type: object
      properties:
        status:
         type: boolean
         example: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/provinsiDetails'
    kotaDetails:
      required:
        - name
        - provinsi_id
      properties:
        id:
          type: number
          example: 1
        provinsi_id:
          type: number
          example: 1
        type:
          type: string
          example: Kota
        name:
          type: string
          example: Palembang
    kecamatanRequests:
      required:
        - name
      properties:
        name:
          type: string
          example: Kemuning
    kecamatanList:
      type: object
      properties:
        status:
         type: boolean
         example: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/kecamatanDetails'
    kecamatanDetails:
      required:
        - name
      properties:
        id:
          type: number
          example: 1
        kota_id:
          type: number
          example: 1
        name:
          type: string
          example: Kemuning
    kelurahanRequests:
      required:
        - name
      properties:
        name:
          type: string
          example: Prabumulih Selatan
    kelurahanList:
      type: object
      properties:
        status:
         type: boolean
         example: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/kelurahanDetails'
    kelurahanDetails:
      properties:
        id:
          type: number
          example: 1
        kecamatan_id:
          type: number
          example: 1
        name:
          type: string
          example: Majasari
        zip_code:
          type: number
          example: 31121
        area_code:
          type: string
          example: 11.05.11.2010
          
  parameters:
    clienttoken:
      required: true
      in: header
      name: Authorization
      schema:
        type: string
      description: JWT bearer token basic auth
      example: >-
        Basic Yf983jf9we8f9jf9832jf3=
    authtoken:
      required: true
      in: header
      name: Authorization
      schema:
        type: string
      description: JWT bearer token basic auth
      example: >-
        Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c